#include <bits/stdc++.h>
using namespace std;
vector<int> adj[1005];
int visited[1005] = {};
vector<pair<int,int>>dscanh;

void DFS(int u, int x, int y){
	visited[u] = 1;
	for ( int i : adj[u]){
		if ((i==x&&u==y)||(i==y&&u==x)){
			continue;
		}
		if ( visited[i] == 0 ){
			DFS(i,x,y);
		}
	}
} 

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while(t--){
		int v,e,a,b;
		cin >> v >> e;
		dscanh.clear();
		for ( int i = 1; i <= v; i++) adj[i].clear();
		for ( int i = 0; i < e; i++){
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
			dscanh.push_back({a,b});
		}
		vector<pair<int,int>>ans;
		for (auto i:dscanh){
			memset(visited,0,sizeof(visited));
			int cnt = 0;
			int x = i.first;
			int y = i.second;
			for ( int j = 1; j<=v;j++){
				if(visited[j]==0){
					cnt++;
					DFS(j,x,y);
				}
			}
			if ( cnt > 1 ) ans.push_back({x,y});
		}
		cout << ans.size() <<endl;
		for ( auto i:ans) cout << "("<<i.first<<" "<<i.second<<") ";
		cout << endl;
	}
}

#include <bits/stdc++.h>
using namespace std;
int v, e, check;
int visited[1005];
vector<int> adj[1005];

void DFS(int u, int cnt){
	if( cnt == v-1 ){
		check = 1; 
		return;
	}
	for( auto x : adj[u] ){
		if ( visited[x] == 0 ){
			visited[x] = 1;
			DFS(x,cnt+1);	
			visited[x] = 0;
		}
	}
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while(t--){
		check = 0;
		memset(visited,0,sizeof(visited));
		int a, b;
		cin >> v >> e;
		for ( int i = 0; i < e; i++){
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		for ( int i = 1; i <= v; i++){
			visited[i] = 1;
			DFS(i,0);
			visited[i] = 0;
			if ( check == 1 ) break;
		}
		cout << check << endl;
		for ( int i = 1; i <= v; i++ ) adj[i].clear();
	}
}

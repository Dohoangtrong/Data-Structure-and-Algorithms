BÌNH THÔNG NHAU

Có N bình chứa nước được đánh số từ 1 đến N, giữa 2 bình nước bất kỳ đều có một ống nối có một van có thể khóa hoặc mở. Ở trạng thái ban đầu tất cả các van đều đóng.

Bạn được cho một số yêu cầu, trong đó mỗi yêu cầu có 2 dạng:

Dạng X Y 1 có ý nghĩa là bạn cần mở van nối giữa 2 bình nước X và bình nước Y.
Dạng X Y 2 có ý nghĩa là bạn cần cho biết với trạng thái các van đang mở / khóa như hiện tại thì 2 bình nước X và Y có thuộc cùng một nhóm bình thông nhau hay không?
Hai bình nước được coi là thuộc cùng một nhóm bình thông nhau nếu nước từ bình này có thể chảy đến được bình kia qua một số ống có van đang mở.

Input:

Dòng đầu tiên là số lượng truy vấn Q (Q <= 100 000).

Mỗi truy vấn gồm 3 số nguyên X, Y, Z (X, Y <= 100 000).

Output: 

Với mỗi truy vấn, in ra đáp án tìm được trên một dòng.

Input:
9
1 2 2
1 2 1
3 7 2
2 3 1
1 3 2
2 4 2
1 4 1
3 4 2
1 7 2

Output:
0
0
1
0
1
0


---code---
#include<bits/stdc++.h>
using namespace std;
int parent[10005];
int find(int u){
	if ( parent[u] == u ) return u;
	int b = find(parent[u]);
	return b;
}

void union_s(int u, int v){
	u = find(u);
	v = find(v);
	if ( u != v ){
		if ( u < v ) parent[v] = u;
		else parent[u] = v;
	} 
}

int main() {
	int n;
	cin >> n;
	int a, b, c;
	for ( int i = 0; i <= 10005; i++){
		parent[i] = i;
	}
	for ( int i = 0; i < n; i++ ){
		cin >> a >> b >> c;
		if ( c == 1 ){
			union_s(a,b);
		}
		if ( c == 2 ){
			if ( find(a) == find(b) ) cout << 1  << endl;
			else cout << 0 << endl;
		}
	}

}

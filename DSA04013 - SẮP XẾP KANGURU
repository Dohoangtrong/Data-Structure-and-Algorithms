#include <bits/stdc++.h>
using namespace std;

int merge(int arr[], int l, int r, int m){
	vector<int> a(arr+l,arr+m+1);
	vector<int> b(arr+m+1,arr+r+1);
	int i = 0, j = 0;
	while(i<a.size()&&j<b.size()){
		if (a[i]<=b[j]){
			arr[l] = a[i];
			i++;l++;
		}else{
			arr[l] = b[j];
			j++;l++;
		}
	}
	while (i<a.size()){
		arr[l] = a[i];
		i++;l++;
	}
	while (j<b.size()){
		arr[l] = b[j];
		j++;l++;
	}
}

void mergeSort(int arr[], int l, int r){
	if(l>=r) return;
	int m =(l+r)/2;
	mergeSort(arr,l,m);
	mergeSort(arr,m+1,r);
	merge(arr,l,r,m);
}

int main(){
	ios_base::sync_with_stdio(0);
    cin.tie(0);
	int t;
	cin >> t;
	while(t--){
		int k = 0;
		int n;
		cin >> n;
		int arr[n+1];
		for(int i = 0; i < n; i++){
			cin >> arr[i];
		}
		sort(arr,arr+n);
		//mergeSort(arr,0,n-1);
		int i = 0, m = (n+1+i)/2;
		while(i < m && m < n){
			if(arr[i]*2>arr[m]) m++;
			else{
				k++;i++;m++;
			}
		}
		cout << n - k << endl;
	}
}





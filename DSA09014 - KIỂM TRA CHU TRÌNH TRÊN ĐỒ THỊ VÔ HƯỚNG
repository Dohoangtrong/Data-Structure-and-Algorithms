#include <bits/stdc++.h>
using namespace std;
int visited[1005];
vector<int> adj[5005];

bool DFS(int u, int parent){
	visited[u] = true;
	for ( auto x : adj[u] ){
		if ( !visited[x] ){
			if ( DFS(x,u) ) return true;
		}else{
			if ( parent != x ) return true;
		}
	}
	return false;
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while(t--){
		int v, e, a, b, check = 0;
		cin >> v >> e;
		for ( int i = 0; i < e; i++){
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		memset(visited,false,sizeof(visited));
		for ( int i = 1; i <= v; i++){
			if ( !visited[i] ){
				if ( DFS(i,0) ){
					check = 1;
					cout << "YES" << endl;
					break;
				}
			}
		}
		if (!check) cout << "NO" << endl;
		for ( int i = 1; i <= v; i++){
			adj[i].clear();
		}
	}
}




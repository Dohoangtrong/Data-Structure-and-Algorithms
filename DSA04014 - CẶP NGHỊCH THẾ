#include <bits/stdc++.h>
using namespace std;
long long merge(int l, int r, int m, int a[]){
	vector<int> lef(a+l,a+m+1);
	vector<int> rig(a+m+1,a+r+1);
	int i = 0, j = 0;
	long long ab = 0;
	while(i<lef.size()&&j<rig.size()){
		if ( lef[i] <= rig[j] ){
			a[l] = lef[i];
			i++;l++;
			
		}else{
			ab += lef.size() - i;
			a[l] = rig[j];
			j++;l++;
		}
	}
	while(i<lef.size()){
		a[l] = lef[i];
		i++;l++;
	}
	while(j<rig.size()){
		a[l] = rig[j];
		j++;l++;
	}
	return ab;
}

long long merge_sort(int l, int r, int a[]){
	long long cnt = 0;
	if ( l < r ){
		int m = (l+r)/2;
		cnt += merge_sort(l,m,a);
		cnt += merge_sort(m+1,r,a);
		cnt += merge(l,r,m,a);	
	}
	return cnt;
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while(t--){
		int n; cin >> n;
		int a[n];
		for ( int i = 0; i < n; i++) cin >> a[i];
		cout << merge_sort(0,n-1,a) << endl;
	}
}




